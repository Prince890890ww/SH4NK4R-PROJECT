const responses = {
    "ЁЯША": ["рд╕рд░рд╛рдлрдд рд╕реЗ рдореБрд╕реНрдХреБрд░рд╛ рд░рд╣реЗ рд╣реЛ ЁЯШАЁЯША", "ЁЯШАЁЯШАЁЯШАЁЯША"],
    "ЁЯШД": ["рдЪреВрд╣реЗ рдЬреИрд╕рд╛ рдореБрд╣ рдордд рдмрдирд╛ ЁЯШЖ", "ЁЯШДЁЯШДЁЯШДЁЯШД"],
    "ЁЯШБ": ["рд▓рдЧрддрд╛ рд╣реИ рдЖрдЬ рдкрд╣рд▓реА рдмрд╛рд░ рдмреНрд░рд╢ рдХрд┐рдпрд╛ рд╣реИ ЁЯШБ", "рдХреЛрд▓рдЧреЗрдЯ рдХрд╛ рдкреНрд░рдЪрд╛рд░ рдХрд░ рд░рд╣реЗ рд╣реЛ рдХреНрдпрд╛?ЁЯШВ", "рдРрд╕реЗ рдХреМрди рд╣рд╕реНрддрд╛ рд╣реИ рджреЛрдиреЛ рджрд╛рдВрдд рдЪрд┐рдкрдХрд╛ рдХреЗ рдпрд╛рд░ЁЯШЭЁЯСИ"],
    "ЁЯШЖ": ["рдЖрдВрдЦ рдмрдВрдж рдХрд░рдХреЗ рдХреНрдпреВ рд╣рд╕ рд░рд╣реЗ рд╣реЛ рдард░рдХреА ЁЯШЖ", "рдЖрдВрдЦ рдЦреЛрд▓ рдХреЗ рд╣рд╕ рди рдореБрдЭреЗ рддреЗрд░реА рдЖрдВрдЦреЛрдВ рдореЗрдВ рдмрд╕ рдЬрд╛рдирд╛ рд╣реИредЁЯШЭ", "ЁЯШРЁЯШРЁЯШРЁЯШР"],
    "ЁЯШЕ": ["рддреЗрд░реЗ рд╕рд░ рд╕реЗ рдкрд╛рдиреА рдХреНрдпреВ рдЯрдкрдХ рд░рд╣рд╛ ЁЯШЕ", "рд▓рдЧрддрд╛ рддреЗрд░реЗ рд╕рд░ рдкрд░ рдКрдкрд░ рд╕реЗ рдХреМрд╡рд╛ рд╣рдЧ рджрд┐рдпрд╛ рд╣реИредЁЯШВ", "ЁЯШЕЁЯШЕЁЯШЕЁЯШЕ"],
    "ЁЯШВ": ["рдЗрддрдиреА рд╣рд╕реА рдХреНрдпреВ рдЖ рд░рд╣реА рд╣реИ рдЗрд╕ рд╣рд╕реА рдХреЗ рдкреАрдЫреЗ рдХреНрдпрд╛ рд░рд╛рдЬ рд╣реИ рдмрддрд╛рдУ рдмрддрд╛рдУ рд╣рдорд╕реЗ рдирд╛ рд╕рд░рдорд╛рдУ ЁЯШВЁЯдд", "рд╣рдВрд╕рдирд╛ рдирд╣реА рдЖрддрд╛ рд╣реИ рддреЛ рд╣рд╕рдореБрдЦрд┐рдпрд╛ рджреЗрд╡реА рд╕реЗ рдЬрд╛рдХрд░ рдорд┐рд▓реЛЁЯШР рд╕реАрдЦрд╛ рджреЗрдЧреА рд╡реЛЁЯе║", "ЁЯШВЁЯШВЁЯШВ"],
    "ЁЯдг": ["рдЬреНрдпрд╛рджрд╛ рдордд рд╣рд╕, рдПрдХ рдореБрдХреНрдХреЗ рдореЗ рд╕рд╛рд░реЗ рджрд╛рдВрдд рддреЛреЬ рджреВрдВрдЧрд╛ ЁЯШВ", "ЁЯдгЁЯдгЁЯдг"],
    "ЁЯШн": ["рдЕрд░реЗ рдпрд╛рд░ рд░реЛрддреЗ рдирд╣реА рдкрд╛рдЧрд▓ рдХрд┐рдпрд╛ рд╣реБрдЖ рд╣реИ рдореБрдЭреЗ рдмрддрд╛рдУ рдмрд╛рдмреВ ЁЯе║ЁЯе║ЁЯе║", "рдХреНрдпрд╛ рд╣реБрдЖ рдмрд╛рдмреВ рдХреНрдпреВрдВ рд░реЛ рд░рд╣реЗ рд╣реЛ рдЧреНрд░реБрдк рдореЗрдВ рдмрд╛рдврд╝ рдЖ рдЬрд╛рдПрдЧреАЁЯе║", "ЁЯШнЁЯШнЁЯШн"],
    "ЁЯШЙ": ["рдЖрдВрдЦ рдХреНрдпреВрдВ рдорд╛рд░ рд░рд╣реЗ рд╣реЛ ЁЯе║ЁЯдЯ", "рд╕рд░реЗрдЖрдо рдкрдмреНрд▓рд┐рдХ рдкреНрд▓реЗрд╕ рдореЗрдВ рдХрд┐рд╕рдХреЛ рдЖрдВрдЦ рдорд╛рд░ рд░рд╣реЗ рд╣реЛ рдмреЗрд╢рд░рдо?ЁЯзР", "ЁЯШЙЁЯШЙЁЯШЙ"],
    "kamina": ["рддреБ рд╣реИ рдХрдорд┐рдирд╛ рдореИрдВ рддреЛ рдмреЛрдЯ рд╣реВрдВредЁЯе║", "рддреБ рдбрдмрд▓ рдХрдорд┐рдирд╛ ЁЯШРЁЯдРЁЯШС", "рддреБ рд╣реИ рд╕рдмрд╕реЗ рдмрдбрд╝рд╛рдХрдорд┐рдирд╛", "рддреБ рд╣реИ рдХрдорд┐рдирд╛ рдореИрдВ рддреЛ рдмреЛрдЯ рд╣реВрдВредЁЯШРЁЯдР"],
    "kutta": ["рддреБ рдХреБрддрд┐рдпрд╛ ЁЯШ╖", "рдХреБрддреНрддрд╛ рдмреЛрд▓реЗ рддреЛ рдЧреНрд░реБрдк рд╕реЗ рднрд╛рдЧ рдЬрд╛рдКрдВрдЧрд╛ЁЯе║", "рджреВрд░ рд╣реЛ рдЬрд╛ рдХреБрддреНрддреЗ рдореЗрд░реЗ рдирдЬрд░реЛрдВ рд╕реЗ ЁЯШ╖"],
    "tharki": ["рддреБ рд╣реИ рдард░рдХреАЁЯе║", "рддреБ рд╣реИ рдард░рдХреА рдореИрдВ рддреЛ рдмреЛрдЯ рд╣реВрдВредЁЯе┤", "рддреБ рдард░рдХреА рддреЗрд░рд╛ рдмрд╛рдк рднреА рдард░рдХреА рдмрд╕ ЁЯШТЁЯСИ"],
    "call": ["рдпрд╛рд░ рдореИрдВ рдХреИрд╕реЗ рдХреЙрд▓ рдЖрдКрдВ рдореИрдВ рддреЛ рдмреЛрдЯ рд╣реВрдВредЁЯе║ЁЯСИ", "рдореИрдВ рдХреЙрд▓ рдирд╣реА рдЖ рд╕рдХрддрд╛ рдореЗрд░реА gf рдХрд╕рдо рджреА рд╣реИ рдЕрдЧрд░ рдХрд┐рд╕реА рдкрд░рд╛рдИ рд▓рдбрд╝рдХреА рд╕реЗ рдХреЙрд▓ рдкрд░ рдмрд╛рдд рдХрд┐рдпрд╛ рддреЛ рдХреБрдЯ рджреВрдВрдЧреАредЁЯе║ЁЯСИ", "рд░рд┐рдЪрд╛рд░реНрдЬ рдЦрддрдо рд╣реЛ рдЧрдпрд╛ ЁЯШТЁЯСИ", "рдирдВрдмрд░ рджреЛ рдмреЗрдмреА рдЕрднреА рдХреЙрд▓ рдЖрддрд╛ рд╣реВрдВред"],
    "chuti": ["рддреБ рд╣реИ рдЪреБрддрд┐рдпрд╛ ЁЯШбЁЯСИ", "рддреБ рд╣реИ рдЪреБрддрд┐рдпрд╛ рдореИрдВ рддреЛ рдмреЛрдЯ рд╣реВрдВредЁЯШТЁЯСИ", "рдЕрд░реЗ рдЪреБрддрд┐рдпрд╛ рдЪреБрдк рд╣реЛ рдЬрд╛ ЁЯШбЁЯШТЁЯСИ"],
    "pagal": ["рд╣рдо рдкрд╛рдЧрд▓ рдирд╣реА рдмрд╛рдмреВ рд╣рдорд╛рд░рд╛ рджрд┐рдорд╛рдЧ рдЦрд░рд╛рдм рд╣реИредЁЯШТЁЯШЭЁЯСИ", "рддреБрдо рднреА рдкрд╛рдЧрд▓ рд╣рдо рднреА рдкрд╛рдЧрд▓ рдкрд╛рдЧрд▓ рд╕рд╛рд░рд╛ рдЬрдорд╛рдирд╛", "рддреБрдо рд╣реЛ рдкрд╛рдЧрд▓ ЁЯШТЁЯСИ"],
        "hate": ["рдЖрдИ рдирдлрд░рдд рдЙрд╣ ЁЯШПЁЯСИ", "рдЖрдИ рд╣реЗрдЯ рдпреВ рдереВ ЁЯШПЁЯСИ", "рдЖрдИ рд▓рд╡ рдЙрд╣ рдмрд╛рдмреВ ЁЯШЭЁЯШШЁЯЩИЁЯСИ"],
        "nikal": ["рдХрд╣рд╛ рд╕реЗ рдирд┐рдХрд▓реВрдВ?ЁЯдФЁЯСИ", "рддреБ рдирд┐рдХрд▓ ЁЯШПЁЯСИ", "рдирд╣реА рдирд┐рдХрд▓рдирд╛ рд╣реИ рд╕рдордЭрд╛ ЁЯШПЁЯСИ"],
        "bhag": ["рд╣рд╛рдВ рдЪрд▓реЛ рд╣рдо рджреЛрдиреЛ рднрд╛рдЧ рдЪрд▓рддреЗ рд╣реИ ЁЯШЭЁЯСИ", "рддреБ рднрд╛рдЧ рдЬрд╛ рдард░рдХреА ЁЯШПЁЯСИ", "рдХрд┐рд╕рдХреЛ рд▓реЗрдХрд░ рднрд╛рдЧрдирд╛ рд╣реИ?ЁЯдФ"],
        "pgl": ["рд╣рдо рдкрд╛рдЧрд▓ рдирд╣реА рдмрд╛рдмреВ рд╣рдорд╛рд░рд╛ рджрд┐рдорд╛рдЧ рдЦрд░рд╛рдм рд╣реИредЁЯШТЁЯШЭЁЯСИ", "рддреБрдо рднреА рдкрд╛рдЧрд▓ рд╣рдо рднреА рдкрд╛рдЧрд▓ рдкрд╛рдЧрд▓ рд╕рд╛рд░рд╛ рдЬрдорд╛рдирд╛", "рддреБрдо рд╣реЛ рдкрд╛рдЧрд▓ ЁЯШТЁЯСИ"],
        "wel": ["рдзрдиреНрдпрд╡рд╛рдж ЁЯШЗЁЯдЪ", "рд╢реБрдХреНрд░рд┐рдпрд╛ ЁЯШЗЁЯдЪ", "рдЖрдкрдХрд╛ рдмрд╣реБрдд рдмрд╣реБрдд рдзрдиреНрдпрд╡рд╛рдж ЁЯШЗЁЯдЪ", "рдереИрдВрдХреНрдпреВ ЁЯШЗЁЯдЪ"],
        "ЁЯШе": ["рдмрд╛рдмреВ рдХрд┐рд╕рдиреЗ рдорд╛рд░рд╛ рдЖрдкрдХреЛ ЁЯШеЁЯСИ", "рд░реЛрдК рдирд╣реА рдореЗрд░реА рдЬрд╛рди ЁЯШеЁЯСИ", "рдХреНрдпрд╛ рд╣реБрдЖ рдмрд╛рдмреВ ЁЯШеЁЯСИ"]
    };

    module.exports.config = {
        name: "autoReply",
        version: "1.0.0",
        hasPermssion: 0,
        credits: "SHANKAR SUMAN",
        description: "Auto-reply to specific emojis and keywords",
        commandCategory: "No command marks needed",
        usePrefix: false,
        cooldowns: 5,
    };

    module.exports.handleEvent = async function({ api, event, client, Users, __GLOBAL }) {
        var { threadID, messageID, senderID, body } = event;
        const keys = Object.keys(responses);

        // Convert the message body to lowercase for case-insensitive matching
        const lowerBody = body.toLowerCase();

        for (const key of keys) {
            // Check if the lowercase message body includes the lowercase keyword
            if (lowerBody.includes(key.toLowerCase())) {
                try {
                    const userInfo = await api.getUserInfo(senderID);
                    if (!userInfo || !userInfo[senderID] || !userInfo[senderID].name) {
                        console.error(`User info not found for senderID: ${senderID}`);
                        return;
                    }
                    const userName = userInfo[senderID].name;

                    // Randomly select a response from the appropriate array
                    const randomResponse = responses[key][Math.floor(Math.random() * responses[key].length)];

                    var msg = {
                        body: randomResponse.replace("naam", userName),
                    };
                    api.sendMessage(msg, threadID, messageID);
                    break;  // Exit the loop once a match is found
                } catch (error) {
                    console.error(`Failed to fetch user info for senderID: ${senderID}`, error);
                }
            }
        }
    }

    module.exports.run = function({ api, event, client, __GLOBAL }) {

    }
